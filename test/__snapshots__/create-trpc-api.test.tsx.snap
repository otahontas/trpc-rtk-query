// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with call to usePrefetch 1`] = `
<div
  onMouseEnter={[Function]}
>
  prefetched
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with call to usePrefetch 2`] = `
<div
  onMouseEnter={[Function]}
>
  <div>
    <p>
      Id: 
      1
    </p>
    <p>
      Name: 
      John Johnny
    </p>
  </div>
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with failing useUserIdQuery 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with failing useUserIdQuery 2`] = `
<div>
  Error
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with successful deep nested query 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with successful deep nested query 2`] = `
<div>
  <p>
    inputBack: 
    heyoooo
  </p>
  <p>
    messageFromDeep: 
    Hello from deep
  </p>
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with successful useUserIdQuery 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with successful useUserIdQuery 2`] = `
<div>
  <p>
    Id: 
    1
  </p>
  <p>
    Name: 
    John Johnny
  </p>
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with call to usePrefetch 1`] = `
<div
  onMouseEnter={[Function]}
>
  prefetched
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with call to usePrefetch 2`] = `
<div
  onMouseEnter={[Function]}
>
  <div>
    <p>
      Id: 
      1
    </p>
    <p>
      Name: 
      John Johnny
    </p>
  </div>
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with failing useUserIdQuery 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with failing useUserIdQuery 2`] = `
<div>
  Error
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with successful deep nested query 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with successful deep nested query 2`] = `
<div>
  <p>
    inputBack: 
    heyoooo
  </p>
  <p>
    messageFromDeep: 
    Hello from deep
  </p>
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with successful useUserIdQuery 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using api generated by createTRPCApi' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with successful useUserIdQuery 2`] = `
<div>
  <p>
    Id: 
    1
  </p>
  <p>
    Name: 
    John Johnny
  </p>
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with call to usePrefetch 1`] = `
<div
  onMouseEnter={[Function]}
>
  prefetched
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with call to usePrefetch 2`] = `
<div
  onMouseEnter={[Function]}
>
  <div>
    <p>
      Id: 
      1
    </p>
    <p>
      Name: 
      John Johnny
    </p>
  </div>
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with failing useUserIdQuery 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with failing useUserIdQuery 2`] = `
<div>
  Error
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with successful deep nested query 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with successful deep nested query 2`] = `
<div>
  <p>
    inputBack: 
    heyoooo
  </p>
  <p>
    messageFromDeep: 
    Hello from deep
  </p>
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with successful useUserIdQuery 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using getClient to get the client' > and making actual requests with hooks renders correctly > with successful useUserIdQuery 2`] = `
<div>
  <p>
    Id: 
    1
  </p>
  <p>
    Name: 
    John Johnny
  </p>
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with call to usePrefetch 1`] = `
<div
  onMouseEnter={[Function]}
>
  prefetched
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with call to usePrefetch 2`] = `
<div
  onMouseEnter={[Function]}
>
  <div>
    <p>
      Id: 
      1
    </p>
    <p>
      Name: 
      John Johnny
    </p>
  </div>
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with failing useUserIdQuery 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with failing useUserIdQuery 2`] = `
<div>
  Error
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with successful deep nested query 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with successful deep nested query 2`] = `
<div>
  <p>
    inputBack: 
    heyoooo
  </p>
  <p>
    messageFromDeep: 
    Hello from deep
  </p>
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with successful useUserIdQuery 1`] = `
<div>
  Loading...
</div>
`;

exports[`create-trpc-api > when 'using pre made api' and  > when 'using passed client' > and making actual requests with hooks renders correctly > with successful useUserIdQuery 2`] = `
<div>
  <p>
    Id: 
    1
  </p>
  <p>
    Name: 
    John Johnny
  </p>
</div>
`;
